// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

// iterates through a given map and generates the appropiate media queries.
// @access public
// @param {String} $fs-map - Map
@mixin font-size($fs-map) {
 @each $fs-breakpoint, $fs-font-size in $fs-map {
  @if $fs-breakpoint == null {
   font-size: $fs-font-size;
  } @else {
   @media screen and (min-width: $fs-breakpoint) {
    font-size: $fs-font-size;
   }
  }
 }
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
 $raw-query: map-get($breakpoints, $breakpoint);

 @if $raw-query {
  $query: if(type-of($raw-query) == "string", unquote($raw-query), inspect($raw-query));

  @media #{$query} {
   @content;
  }
 } @else {
  @error 'No value found for `#{$breakpoint}`. ' + 'Please make sure it is defined in `$breakpoints` map.';
 }
}

// Assign element dimensions
// @param {String} $width - Width
// @param {String} $height - Height
@mixin size($width, $height: $width) {
 width: $width;
 height: $height;
}

// Truncate long texts
// @param {String} $width - Element Width
// @param {String} $display - Display property
@mixin truncate($width: 100%, $display: block) {
 white-space: nowrap;
 overflow: hidden;
 text-overflow: ellipsis;
 width: $width;
 display: $display;
}
